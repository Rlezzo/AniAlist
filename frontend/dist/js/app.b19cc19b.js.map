{"version":3,"file":"js/app.b19cc19b.js","mappings":"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","sources":["webpack://frontend/./src/App.vue","webpack://frontend/./src/App.vue?7ccd","webpack://frontend/./src/components/LoginPage.vue","webpack://frontend/./src/api/axios.js","webpack://frontend/./src/components/LoginPage.vue?8d24","webpack://frontend/./src/components/RSSFeeds.vue","webpack://frontend/./src/components/RSSFeeds.vue?ff7b","webpack://frontend/./src/components/MagnetManager.vue","webpack://frontend/./src/components/MagnetManager.vue?e1f9","webpack://frontend/./src/components/LogViewer.vue","webpack://frontend/./src/components/LogViewer.vue?78ed","webpack://frontend/./src/components/NotFound.vue","webpack://frontend/./src/components/NotFound.vue?13e4","webpack://frontend/./src/components/LoginLogs.vue","webpack://frontend/./src/components/LoginLogs.vue?180b","webpack://frontend/./src/router.js","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/compat get default export","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/make namespace object","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <header v-if=\"!isLoginOrNotFound\">\n      <h1>欢迎使用 RSS 管理系统</h1>\n    </header>\n    <router-view></router-view> <!-- 根据路由展示页面 -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  computed: {\n    isLoginOrNotFound() {\n      // 根据路由名称判断是否为登录页或 404 页\n      return this.$route.name === 'Login' || this.$route.name === 'NotFound';\n    }\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n.primary-button {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.3s ease;\n  margin: 5px;\n  color: #fff;\n  font-weight: bold;\n  background-color: #007bff; /* 蓝色 */\n}\n\n.primary-button:hover {\n  background-color: #0069d9; /* 深蓝色 */\n}\n\nbutton:disabled {\n  background-color: #e0e0e0;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n/* 鼠标悬停效果 - 提升视觉反馈 */\nbutton:hover {\n  transform: translateY(-3px);\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=1ab3db19\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1ab3db19&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"login-container\">\n    <h2>登录系统</h2>\n    <div class=\"login-form\">\n      <input v-model=\"username\" type=\"text\" placeholder=\"请输入用户名\" class=\"login-input\" />\n      <input v-model=\"password\" type=\"password\" placeholder=\"请输入密码\" class=\"login-input\" />\n      <button @click=\"login\" class=\"login-button\">登录</button>\n      <div v-if=\"loginError\" class=\"error-message\">{{ loginError }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { loginUser } from '../api/axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginError: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await loginUser(this.username, this.password);\n        const token = response.token; // 修改为直接从 response 中获取\n        localStorage.setItem('token', token); // 保存 Token\n        this.$router.push({ name: 'RSSFeeds' }); // 登录成功后跳转到 RSSFeeds 主页\n      } catch (error) {\n        this.loginError = '用户名或密码错误，请重试';\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.login-container {\n  max-width: 400px;\n  margin: 100px auto;\n  padding: 20px;\n  text-align: center;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  background-color: #f9f9f9;\n}\n\n.login-input {\n  width: 80%;\n  padding: 10px;\n  margin-bottom: 20px;\n  border-radius: 4px;\n  border: 1px solid #ddd;\n}\n\n.login-button {\n  padding: 10px 20px;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.login-button:hover {\n  background-color: #218838;\n}\n\n.error-message {\n  color: #dc3545;\n  margin-top: 10px;\n}\n</style>","import axios from 'axios';\n\n// 创建一个 axios 实例\nconst apiClient = axios.create({\n  baseURL: 'http://127.0.0.1:5000/api', // 后端 API 的基础 URL\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true // 允许发送跨域请求时携带凭据\n});\n\n// 获取所有 RSS 订阅\nexport const fetchFeeds = () => {\n  return apiClient.get('/rss');\n};\n\n// 创建新的 RSS 订阅\nexport const createFeed = (feedData) => {\n  return apiClient.post('/rss', feedData);\n};\n\nexport const deleteFeed = (rssId) => {\n  return apiClient.delete(`/rss/${rssId}`);\n};\n\n// put更新某个 RSS 订阅的基本信息\nexport const updateFeed = (rssId, updateData) => {\n  return apiClient.put(`/rss/${rssId}`, updateData);\n};\n\n// patch更新某个 RSS 订阅的单项信息\nexport const patchRssFeed = (rssId, updateData) => {\n  return apiClient.patch(`/rss/${rssId}`, updateData);\n};\n\n// 重命名 RSS 源的名称和网盘文件夹\nexport const renameRssFeed = (rssId, updateData) => {\n  return apiClient.patch(`/rss/${rssId}/rename`, updateData);\n};\n\n// 刷新单个 RSS 订阅\nexport const refreshSingleFeed = (rssId) => {\n  return apiClient.post(`/rss/${rssId}/refresh`);\n};\n\n// 刷新多个 RSS 订阅\nexport const refreshAllFeeds = (rssIdList) => {\n  const requests = rssIdList.map((rssId) => {\n    return refreshSingleFeed(rssId);\n  });\n  return Promise.all(requests);\n};\n\n// 增加获取单个 RSS 订阅的方法（可选）\nexport const fetchRSSFeedById = (rssId) => {\n  return apiClient.get(`/rss/${rssId}`);\n};\n\n// 封装 Magnet API 调用\nexport const fetchMagnets = () => {\n  return apiClient.get('/magnets');\n};\n\nexport const deleteMagnet = (magnetId) => {\n  return apiClient.delete(`/magnets/${magnetId}`);\n};\n\n// 获取特定 RSS 源的所有任务\nexport const fetchMagnetsByRss = (rssId) => {\n  return apiClient.get(`/magnets/rss/${rssId}`);\n};\n\n// 重试任务 - 使用路径参数传递 magnetId\nexport const retryMagnet = (magnetId) => {\n  return apiClient.post(`/magnets/${magnetId}/retry`);\n};\n\nexport const startTaskQueue = () => {\n  return apiClient.post('/magnets/queue/start');\n};\n\n// 获取日志数据\nexport const fetchLogs = (level, startDate, endDate, includeDetails, page, pageSize) => {\n  return apiClient.get('/logs', {\n    params: {\n      level: level || 'ALL',\n      start_date: startDate || '',\n      end_date: endDate || '',\n      include_details: includeDetails,\n      page: page || 1,\n      page_size: pageSize || 20,\n    }\n  });\n};\n\n// 用户登录请求\nexport const loginUser = async (username, password) => {\n  try {\n    const response = await apiClient.post('/auth/login', { username, password });\n    const token = response.data.token;\n    if (token) {\n      localStorage.setItem('token', token); // 存储 Token 到 localStorage\n    }\n    return response.data;\n  } catch (error) {\n    console.error('登录失败:', error.response?.data?.message || error.message);\n    throw error;\n  }\n};\n\n// 添加请求拦截器，确保所有请求都附带 Token\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // 从 localStorage 获取 token\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // 附加 Bearer Token\n  }\n  return config;\n}, error => {\n  console.error('请求拦截器错误:', error);\n  return Promise.reject(error);\n});\n\n\napiClient.interceptors.response.use(\n  response => response, // 对成功响应直接返回\n  async error => {\n    if (error.response?.status === 401 && error.response?.data?.message === 'Token has expired!') {\n      try {\n        // 调用刷新接口\n        const refreshResponse = await apiClient.post('/auth/refresh');\n        const newToken = refreshResponse.data.token;\n\n        if (newToken) {\n          localStorage.setItem('token', newToken); // 更新 Token\n          error.config.headers.Authorization = `Bearer ${newToken}`; // 设置新 Token\n          return apiClient.request(error.config); // 重试原始请求\n        }\n      } catch {\n        // 清除无效 Token 并重定向到登录页面\n        localStorage.removeItem('token');\n        window.location.href = '/login';\n      }\n    }\n    return Promise.reject(error); // 其他错误继续抛出\n  }\n);\n\nexport const getLoginLogs = () => {\n  return apiClient.get('/login_logs');\n};\n\n\n// 导出 axios 实例以供组件直接使用\nexport default apiClient;\n\n\n// // 创建 axios.js 作为封装所有 API 请求的模块\n// import axios from 'axios';\n\n// // 创建一个 axios 实例\n// const apiClient = axios.create({\n//   baseURL: 'http://127.0.0.1:5000/api', // 后端 API 的基础 URL\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n// });\n\n// // 封装 RSS API 调用\n// export const fetchFeeds = () => {\n//   return apiClient.get('/rss');\n// };\n\n// export const createFeed = (feedData) => {\n//   return apiClient.post('/rss', feedData);\n// };\n\n// export const deleteFeed = (rssId) => {\n//   return apiClient.delete(`/rss/${rssId}`);\n// };\n\n// export const updateFeed = (rssId, updateData) => {\n//   return apiClient.patch(`/rss/${rssId}`, updateData);\n// };\n\n// export const updateSingleFeed = (rssId) => {\n//   return apiClient.post(`/rss/${rssId}/update`);\n// };\n\n// export const updateAllFeeds = (rssIdList) => {\n//   const requests = rssIdList.map((rssId) => {\n//     return updateSingleFeed(rssId);\n//   });\n//   return Promise.all(requests);\n// };\n\n\n// // 封装 magnet API 调用\n// export const fetchmagnets = () => {\n//   return apiClient.get('/magnets');\n// };\n\n// export const deletemagnet = (magnetId) => {\n//   return apiClient.delete(`/magnets/${magnetId}`);\n// };\n\n// // 重试任务\n// export const retrymagnet = (savePath, urls) => {\n//   return apiClient.post('/magnets/retry', {\n//     save_path: savePath,\n//     urls: urls,\n//   });\n// };\n\n// // 导出 axios 实例以供组件直接使用\n// export default apiClient;\n  ","import { render } from \"./LoginPage.vue?vue&type=template&id=064c72d4&scoped=true\"\nimport script from \"./LoginPage.vue?vue&type=script&lang=js\"\nexport * from \"./LoginPage.vue?vue&type=script&lang=js\"\n\nimport \"./LoginPage.vue?vue&type=style&index=0&id=064c72d4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-064c72d4\"]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <header class=\"header\">\n      <h2>RSS Feeds 管理</h2>\n      <div class=\"user-controls\">\n        <p class=\"welcome-message\">Welcome，{{ username }}！</p>\n        <button @click=\"logout\" class=\"logout-button\">退出登录</button>\n      </div>\n    </header>\n\n    <div class=\"button-group\">\n      <button @click=\"$router.push({ name: 'LoginLogs' })\" class=\"button-group-item view-logs-button\">查看登录记录</button>\n      <button @click=\"viewLogs\" class=\"button-group-item system-logs-button\">查看系统日志</button>\n      <button @click=\"refreshAllRssFeeds\" :disabled=\"refreshingAll\" class=\"button-group-item refresh-all-button\">\n        更新所有勾选的 RSS 源\n      </button>\n      <button @click=\"startTaskQueue\" class=\"button-group-item start-queue-button\">启动任务队列</button>\n    </div>\n\n    <section class=\"feeds-section\">\n      <h1>RSS Feeds</h1>\n\n      <!-- 筛选条件 -->\n      <div class=\"filter-options\">\n        <label class=\"filter-label\">\n          <span>按更新时间筛选：</span>\n          <input type=\"date\" v-model=\"filterDate\" @change=\"applyFilters\" class=\"date-input\" />\n        </label>\n        <label class=\"filter-label\">\n          <span>是否更新：</span>\n          <select v-model=\"filterShouldUpdate\" @change=\"applyFilters\" class=\"select-input\">\n            <option value=\"\">全部</option>\n            <option value=\"true\">是</option>\n            <option value=\"false\">否</option>\n          </select>\n        </label>\n        <label class=\"filter-label\">\n          <span>名称搜索：</span>\n          <input type=\"text\" v-model=\"searchName\" @input=\"applyFilters\" class=\"text-input\" placeholder=\"搜索名称\" />\n        </label>\n      </div>\n\n      <!-- RSS Feeds 列表表格显示 -->\n      <table class=\"rss-table\">\n        <thead>\n          <tr>\n            <th>名称</th>\n            <th>URL</th>\n            <th>上次更新</th>\n            <th>是否更新</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"feed in paginatedFeeds\" :key=\"feed.id\">\n            <td @click=\"viewMagnets(feed)\" class=\"clickable\">{{ feed.name }}</td>\n            <td><a :href=\"feed.url\" target=\"_blank\">订阅地址</a></td>\n            <td>{{ feed.last_updated ? feed.last_updated : '未更新' }}</td>\n            <td>\n              <input type=\"checkbox\" v-model=\"feed.should_update\" @change=\"updateShouldUpdate(feed)\" />\n            </td>\n            <td>\n              <div v-if=\"!feed.isEditing\" class=\"actions\">\n                <button @click=\"editFeed(feed)\" class=\"edit-button\">编辑</button>\n                <button @click=\"confirmDeleteFeed(feed.id)\" class=\"delete-button\">删除</button>\n                <button @click=\"refreshSingleRssFeed(feed.id)\" :disabled=\"refreshingFeedId === feed.id\"\n                  class=\"refresh-button\">\n                  更新订阅\n                </button>\n              </div>\n              <div v-else class=\"edit-form\">\n                <input type=\"text\" v-model=\"feed.newName\" placeholder=\"名称\" class=\"edit-input\" />\n                <input type=\"text\" v-model=\"feed.newUrl\" placeholder=\"URL\" class=\"edit-input\" />\n                <div class=\"edit-actions\">\n                  <button @click=\"saveFeedChanges(feed)\" class=\"save-button\">保存</button>\n                  <button @click=\"cancelEdit(feed)\" class=\"cancel-button\">取消</button>\n                </div>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- 分页控件 -->\n      <div class=\"pagination\">\n        <button @click=\"prevPage\" :disabled=\"currentPage === 1\" class=\"pagination-button prev-page-button\">\n          上一页\n        </button>\n        <span class=\"pagination-info\">第 {{ currentPage }} 页，共 {{ totalPages }} 页</span>\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\" class=\"pagination-button next-page-button\">\n          下一页\n        </button>\n        <div class=\"page-input-container\">\n          <label>\n            跳转到：\n            <input type=\"number\" v-model.number=\"pageInput\" min=\"1\" :max=\"totalPages\" class=\"page-input\" />\n          </label>\n          <button @click=\"jumpToPage\" class=\"jump-button\">跳转</button>\n        </div>\n      </div>\n\n      <!-- 添加新的 RSS 源 -->\n      <div class=\"add-rss-container\">\n        <h3>添加新的 RSS 源</h3>\n        <div class=\"add-rss-form\">\n          <input v-model=\"newFeed.name\" placeholder=\"名称\" class=\"add-input\" />\n          <input v-model=\"newFeed.url\" placeholder=\"URL\" class=\"add-input\" />\n          <button @click=\"addFeed\" :disabled=\"addingFeed\" class=\"add-button\">添加</button>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { fetchFeeds, createFeed, deleteFeed, patchRssFeed, renameRssFeed, refreshAllFeeds, refreshSingleFeed, startTaskQueue as startTasks } from '../api/axios';\n\nexport default {\n  data() {\n    return {\n      feeds: [],\n      newFeed: {\n        name: '',\n        url: ''\n      },\n      username: '', // 用于显示用户名\n      refreshingAll: false,\n      refreshingFeedId: null,\n      deletingFeedId: null,\n      addingFeed: false,\n      pageSize: 10,\n      currentPage: 1,\n      pageInput: 1,\n      filterDate: '',\n      filterShouldUpdate: 'true',\n      searchName: '',\n      logs: []\n    };\n  },\n  computed: {\n    paginatedFeeds() {\n      const startIndex = (this.currentPage - 1) * this.pageSize;\n      return this.filteredFeeds.slice(startIndex, startIndex + this.pageSize);\n    },\n    totalPages() {\n      return Math.ceil(this.filteredFeeds.length / this.pageSize);\n    },\n    filteredFeeds() {\n      return this.feeds.filter(feed => {\n        let matchesDate = true;\n        let matchesShouldUpdate = true;\n        let matchesSearchName = true;\n\n        if (this.filterDate) {\n          matchesDate = this.isSameDay(feed.last_updated, this.filterDate);\n        }\n        if (this.filterShouldUpdate) {\n          matchesShouldUpdate = feed.should_update.toString() === this.filterShouldUpdate;\n        }\n        if (this.searchName) {\n          matchesSearchName = feed.name.toLowerCase().includes(this.searchName.toLowerCase());\n        }\n\n        return matchesDate && matchesShouldUpdate && matchesSearchName;\n      });\n    }\n  },\n  created() {\n    this.setDefaultFilters();\n    this.fetchFeeds();\n    this.getUsername(); // 在创建时获取用户名\n  },\n\n  methods: {\n    // 开启队列\n    async startTaskQueue() {\n      try {\n        const response = await startTasks();\n        // 后端返回 JSON 格式，其中包含 \"message\" 字段\n        alert(response.data.message);\n        // 如果需要重新获取状态，可以在这里调用 fetchFeeds()\n        // await this.fetchFeeds();\n      } catch (error) {\n        console.error('Error starting queue:', error);\n        alert('启动任务队列时发生错误，请查看控制台。');\n      }\n    },\n    viewLogs() {\n      this.$router.push({ name: 'LogViewer' });\n    },\n    viewMagnets(feed) {\n      this.$router.push({ name: 'MagnetManager', params: { rssFeedId: feed.id } });\n    },\n    getUsername() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const payload = JSON.parse(atob(token.split('.')[1]));\n          this.username = payload.username;\n        } catch (error) {\n          console.error('无法解析 JWT token:', error);\n        }\n      }\n    },\n    logout() {\n      localStorage.removeItem('token'); // 清除 Token\n      this.$router.push({ name: 'Login' }); // 重定向到登录页面\n    },\n    setDefaultFilters() {\n      const today = new Date();\n      const year = today.getFullYear();\n      const month = (today.getMonth() + 1).toString().padStart(2, '0');\n      const day = today.getDate().toString().padStart(2, '0');\n      this.filterDate = `${year}-${month}-${day}`; // 设置今天的日期为默认筛选日期\n      this.filterShouldUpdate = 'true';\n    },\n    isSameDay(dateString, filterDate) {\n      if (!dateString) return false;\n\n      const date = new Date(dateString);\n      const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`;\n\n      return formattedDate === filterDate;\n    },\n    async fetchFeeds() {\n      try {\n        const response = await fetchFeeds();\n        this.feeds = response.data.map(feed => ({\n          ...feed,\n          should_update: feed.should_update,\n          last_updated: feed.last_updated ? this.formatDate(feed.last_updated) : null,\n          isEditing: false,\n          newName: feed.name,\n          newUrl: feed.url\n        }));\n      } catch (error) {\n        console.error('Error fetching RSS feeds:', error);\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      const year = date.getFullYear();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const day = date.getDate().toString().padStart(2, '0');\n      const hours = date.getHours().toString().padStart(2, '0');\n      const minutes = date.getMinutes().toString().padStart(2, '0');\n      const seconds = date.getSeconds().toString().padStart(2, '0');\n      return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    jumpToPage() {\n      if (this.pageInput >= 1 && this.pageInput <= this.totalPages) {\n        this.currentPage = this.pageInput;\n      }\n    },\n    async addFeed() {\n      if (this.newFeed.name && this.newFeed.url) {\n        this.addingFeed = true;\n        try {\n          await createFeed(this.newFeed);\n          this.fetchFeeds();\n          this.newFeed.name = '';\n          this.newFeed.url = '';\n        } catch (error) {\n          console.error('Error adding RSS feed:', error);\n        } finally {\n          this.addingFeed = false;\n        }\n      }\n    },\n    confirmDeleteFeed(id) {\n      if (confirm('确定要删除该 RSS 源吗？此操作不可撤销。')) {\n        this.deleteFeed(id);\n      }\n    },\n    async deleteFeed(id) {\n      this.deletingFeedId = id;\n      try {\n        await deleteFeed(id);\n        this.fetchFeeds();\n      } catch (error) {\n        console.error('Error deleting RSS feed:', error);\n      } finally {\n        this.deletingFeedId = null;\n      }\n    },\n    async refreshAllRssFeeds() {\n      this.refreshingAll = true;\n      const selectedFeeds = this.feeds.filter(feed => feed.should_update);\n      try {\n        await refreshAllFeeds(selectedFeeds.map(feed => feed.id));\n        alert('勾选的 RSS 源已刷新，新任务已添加！');\n        await this.fetchFeeds(); // 操作成功后重新获取 RSS Feeds 列表\n      } catch (error) {\n        console.error('Error refreshing all RSS feeds:', error);\n      } finally {\n        this.refreshingAll = false;\n      }\n    },\n    async refreshSingleRssFeed(id) {\n      this.refreshingFeedId = id;\n      try {\n        await refreshSingleFeed(id);\n        alert(`RSS 源 ID ${id} 已刷新，新任务已添加！`);\n        await this.fetchFeeds(); // 操作成功后重新获取 RSS Feeds 列表\n      } catch (error) {\n        console.error('Error refreshing RSS feed:', error);\n      } finally {\n        this.refreshingFeedId = null;\n      }\n    },\n    async updateShouldUpdate(feed) {\n      try {\n        await patchRssFeed(feed.id, {\n          should_update: feed.should_update\n        });\n        // 操作成功后重新获取 RSS Feeds 列表\n        await this.fetchFeeds();\n      } catch (error) {\n        console.error('Error updating should_update status:', error);\n      }\n    },\n    editFeed(feed) {\n      feed.isEditing = true;\n    },\n    async saveFeedChanges(feed) {\n      try {\n        if (feed.name !== feed.newName) {\n          // 只有在名称改变时才调用重命名 API\n          await renameRssFeed(feed.id, {\n            old_name: feed.name,\n            new_name: feed.newName\n          });\n        }\n\n        // 对于 URL 或其他字段的更新仍然使用原来的 PATCH 方法\n        await patchRssFeed(feed.id, {\n          url: feed.newUrl,\n          should_update: feed.should_update\n        });\n\n        // 更新前端状态\n        feed.name = feed.newName;\n        feed.url = feed.newUrl;\n        feed.isEditing = false;\n      } catch (error) {\n        console.error('Error saving feed changes:', error);\n      }\n    },\n    cancelEdit(feed) {\n      feed.isEditing = false;\n      feed.newName = feed.name;\n      feed.newUrl = feed.url;\n    },\n    applyFilters() {\n      this.currentPage = 1; // 每次筛选重置为第一页\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 基础样式 */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #ffffff;\n  /* 纯白色背景 */\n  min-height: 100vh;\n  box-sizing: border-box;\n}\n\n/* 头部样式 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 25px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #e0f7fa;\n  /* 使用淡蓝色边框替代灰色 */\n}\n\n.header h2 {\n  color: #333;\n  font-size: 1.8em;\n}\n\n.user-controls {\n  display: flex;\n  align-items: center;\n  gap: 15px;\n}\n\n.welcome-message {\n  font-size: 1em;\n  color: #555;\n}\n\n.logout-button {\n  padding: 8px 20px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-size: 0.95em;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.logout-button:hover {\n  background-color: #c82333;\n  transform: translateY(-2px);\n}\n\n/* 按钮组 */\n.button-group {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 30px;\n  flex-wrap: wrap;\n}\n\n.button-group-item {\n  padding: 10px 25px;\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  color: #fff;\n  background-color: #6c757d;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.button-group-item:hover {\n  transform: translateY(-2px);\n  background-color: #5a6268;\n}\n\n.button-group-item:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 不同按钮颜色 */\n.view-logs-button {\n  background-color: #007bff;\n}\n\n.view-logs-button:hover {\n  background-color: #0069d9;\n}\n\n.system-logs-button {\n  background-color: #17a2b8;\n}\n\n.system-logs-button:hover {\n  background-color: #138496;\n}\n\n.refresh-all-button {\n  background-color: #28a745;\n}\n\n.refresh-all-button:hover {\n  background-color: #218838;\n}\n\n.start-queue-button {\n  background-color: #6222e3;\n}\n\n.start-queue-button:hover {\n  background-color: #581ecb;\n}\n\n/* RSS Feeds 部分 */\n.feeds-section {\n  background-color: #ffffff;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\n\n.feeds-section h1 {\n  text-align: center;\n  color: #333;\n  margin-bottom: 25px;\n  font-size: 1.6em;\n}\n\n/* 筛选选项 */\n.filter-options {\n  background-color: #ffffff;\n  /* 使用白色背景替代浅灰色 */\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.04);\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  gap: 30px;\n  flex-wrap: wrap;\n  margin-bottom: 25px;\n}\n\n.filter-label {\n  display: flex;\n  flex-direction: column;\n  font-size: 0.95em;\n  color: #555;\n}\n\n.filter-label span {\n  margin-bottom: 8px;\n  font-weight: 500;\n}\n\n.date-input,\n.select-input,\n.text-input {\n  padding: 10px 14px;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  width: 220px;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  font-size: 0.95em;\n}\n\n.date-input:focus,\n.select-input:focus,\n.text-input:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);\n  outline: none;\n}\n\n/* 表格样式 */\n.rss-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 25px;\n}\n\n.rss-table th,\n.rss-table td {\n  padding: 14px 20px;\n  border: 1px solid #e0f7fa;\n  /* 使用淡蓝色边框替代灰色 */\n  text-align: left;\n  font-size: 0.95em;\n  color: #333333;\n}\n\n.rss-table th {\n  background-color: #e0f7fa;\n  /* 淡蓝色背景 */\n  font-weight: 600;\n}\n\n.rss-table tbody tr:nth-child(even) {\n  background-color: #ffffff;\n  /* 使用白色背景 */\n}\n\n.clickable {\n  cursor: pointer;\n  color: #007bff;\n  transition: color 0.3s ease;\n}\n\n.clickable:hover {\n  color: #0056b3;\n  text-decoration: underline;\n}\n\n.rss-table a {\n  color: #007bff;\n  text-decoration: none;\n  transition: color 0.3s ease;\n}\n\n.rss-table a:hover {\n  color: #0056b3;\n  text-decoration: underline;\n}\n\n/* 操作按钮 */\n.actions {\n  display: flex;\n  gap: 10px;\n}\n\n.edit-button,\n.delete-button,\n.refresh-button {\n  padding: 6px 14px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 0.85em;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.edit-button {\n  background-color: #007bff;\n}\n\n.edit-button:hover {\n  background-color: #0069d9;\n  transform: translateY(-2px);\n}\n\n.delete-button {\n  background-color: #dc3545;\n}\n\n.delete-button:hover {\n  background-color: #c82333;\n  transform: translateY(-2px);\n}\n\n.refresh-button {\n  background-color: #28a745;\n}\n\n.refresh-button:hover {\n  background-color: #218838;\n  transform: translateY(-2px);\n}\n\n.refresh-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 编辑表单 */\n.edit-form {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.edit-input {\n  padding: 10px 14px;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  font-size: 0.95em;\n}\n\n.edit-input:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);\n  outline: none;\n}\n\n.edit-actions {\n  display: flex;\n  gap: 10px;\n}\n\n.save-button,\n.cancel-button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 0.85em;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  color: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.save-button {\n  background-color: #17a2b8;\n}\n\n.save-button:hover {\n  background-color: #138496;\n  transform: translateY(-2px);\n}\n\n.cancel-button {\n  background-color: #ffc107;\n  color: #333;\n}\n\n.cancel-button:hover {\n  background-color: #e0a800;\n  transform: translateY(-2px);\n}\n\n/* 分页控件 */\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  margin-bottom: 25px;\n  flex-wrap: wrap;\n}\n\n.pagination-button {\n  padding: 8px 20px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  color: #fff;\n  background-color: #6c757d;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.pagination-button:hover {\n  transform: translateY(-2px);\n  background-color: #5a6268;\n}\n\n.pagination-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.prev-page-button {\n  background-color: #28a745;\n}\n\n.prev-page-button:hover {\n  background-color: #218838;\n}\n\n.next-page-button {\n  background-color: #17a2b8;\n}\n\n.next-page-button:hover {\n  background-color: #138496;\n}\n\n.pagination-info {\n  font-size: 0.95em;\n  color: #555;\n}\n\n.page-input-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.page-input {\n  padding: 8px 12px;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  width: 80px;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  font-size: 0.95em;\n}\n\n.page-input:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);\n  outline: none;\n}\n\n.jump-button {\n  padding: 8px 16px;\n  background-color: #6c757d;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.jump-button:hover {\n  background-color: #5a6268;\n  transform: translateY(-2px);\n}\n\n/* 添加 RSS 部分 */\n.add-rss-container {\n  background-color: #ffffff;\n  /* 使用白色背景替代浅灰色 */\n  padding: 25px 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);\n  text-align: center;\n}\n\n.add-rss-container h3 {\n  color: #333;\n  margin-bottom: 20px;\n  font-size: 1.4em;\n}\n\n.add-rss-form {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  flex-wrap: wrap;\n}\n\n.add-input {\n  padding: 10px 16px;\n  border-radius: 5px;\n  border: 1px solid #ced4da;\n  width: 220px;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n  font-size: 0.95em;\n}\n\n.add-input:focus {\n  border-color: #007bff;\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);\n  outline: none;\n}\n\n.add-button {\n  padding: 10px 22px;\n  background-color: #28a745;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.add-button:hover {\n  background-color: #218838;\n  transform: translateY(-2px);\n}\n\n.add-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 全局按钮样式 */\nbutton {\n  font-family: inherit;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n\n  .filter-options,\n  .button-group,\n  .add-rss-form,\n  .actions,\n  .edit-actions,\n  .pagination {\n    flex-direction: column;\n    align-items: center;\n  }\n\n  .date-input,\n  .select-input,\n  .text-input,\n  .add-input,\n  .page-input {\n    width: 100%;\n    max-width: 300px;\n  }\n\n  .rss-table {\n    font-size: 0.85em;\n  }\n}\n</style>\n","import { render } from \"./RSSFeeds.vue?vue&type=template&id=37af35fa&scoped=true\"\nimport script from \"./RSSFeeds.vue?vue&type=script&lang=js\"\nexport * from \"./RSSFeeds.vue?vue&type=script&lang=js\"\n\nimport \"./RSSFeeds.vue?vue&type=style&index=0&id=37af35fa&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-37af35fa\"]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <header class=\"header\">\n      <h2 v-if=\"rssFeed\">任务管理 - {{ rssFeed.name }} (共{{ totalEpisodes }}集)</h2>\n      <h2 v-else>正在加载任务管理...</h2>\n      <button @click=\"$router.push({ name: 'RSSFeeds' })\" class=\"primary-button back-button\">返回 RSS 管理</button>\n    </header>\n\n    <section class=\"tasks-section\">\n      <!-- 任务列表表格显示 -->\n      <table class=\"magnet-table\">\n        <thead>\n          <tr>\n            <th>序号</th>\n            <th>标题</th>\n            <th>状态</th>\n            <th>磁力链接</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"(magnet, index) in sortedMagnets\" :key=\"magnet.id\" :class=\"{\n            'incomplete-task-row': !magnet.status,\n            'completed-task-row': magnet.status\n          }\">\n            <td>{{ index + 1 }}</td> <!-- 递增序号 -->\n            <td v-html=\"highlightEpisodeNumber(magnet.title)\"></td> <!-- 突出显示集数 -->\n            <td>{{ magnet.status ? '已上传' : '未上传' }}</td> <!-- 状态 -->\n            <td><a :href=\"magnet.magnet_link\" target=\"_blank\">查看链接</a></td>\n            <td>\n              <button @click=\"retryMagnet(magnet)\" :disabled=\"retryingMagnetId === magnet.id\"\n                class=\"primary-button retry-button\">\n                重试\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- 没有任务时的显示 -->\n      <p v-if=\"sortedMagnets.length === 0\" class=\"no-tasks-message\">没有找到相关的任务。</p>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { fetchMagnetsByRss, retryMagnet as retryMagnetAPI, fetchRSSFeedById } from '../api/axios';\n\nexport default {\n  props: {\n    rssFeedId: {\n      type: String,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      rssFeed: null, // 保存当前 RSS 详情\n      magnets: [],\n      retryingMagnetId: null,\n      patterns: [\n        /\\[(\\d{2})\\]/,               // 匹配方括号包围的两位数，如 [01], [10]\n        /第\\s*(\\d{2})\\s*集/,          // 匹配“第10集”, “第00集”\n        /第\\s*(\\d{2})\\s*話/,          // 匹配“第10話”, “第00話” (繁体)\n        /\\s+(\\d{2})\\s+/,             // 匹配两边有空格的两位数，如 \" 87 \"\n        /\\b(\\d{2})\\b/,               // 匹配独立的两位数，避免匹配720p等\n        // 未来添加更多模式...\n      ],\n    };\n  },\n  computed: {\n    // 计算属性：对 magnets 进行排序\n    sortedMagnets() {\n      return this.magnets.slice().sort((a, b) => {\n        const aEpisode = this.extractEpisodeNumber(a.title);\n        const bEpisode = this.extractEpisodeNumber(b.title);\n\n        if (aEpisode !== null && bEpisode !== null) {\n          return bEpisode - aEpisode; // 按集数降序排序\n        } else if (aEpisode !== null) {\n          return -1; // a 有集数，b 没有集数\n        } else if (bEpisode !== null) {\n          return 1; // b 有集数，a 没有集数\n        } else {\n          return b.id - a.id; // 都没有集数，按 id 降序\n        }\n      });\n    },\n    // 计算属性：总集数\n    totalEpisodes() {\n      return this.sortedMagnets.length;\n    },\n  },\n  created() {\n    this.fetchRssFeedDetails();\n  },\n  methods: {\n    // 获取特定 RSS 的详细信息\n    async fetchRssFeedDetails() {\n      try {\n        const response = await fetchRSSFeedById(this.rssFeedId);\n        this.rssFeed = response.data;\n        this.fetchMagnets(); // 获取到 RSS 详情后再获取对应的磁力链接任务\n      } catch (error) {\n        console.error('Error fetching RSS feed details:', error);\n        alert('无法加载 RSS Feed 详情，请检查控制台日志。');\n      }\n    },\n    // 获取选中 RSS 的任务\n    async fetchMagnets() {\n      try {\n        const response = await fetchMagnetsByRss(this.rssFeed.id);\n        this.magnets = response.data;\n      } catch (error) {\n        console.error('Error fetching magnets:', error);\n        alert('获取任务时发生错误，请检查控制台日志。');\n      }\n    },\n    // 重试任务\n    async retryMagnet(magnet) {\n      this.retryingMagnetId = magnet.id; // 标记正在重试的任务 ID\n      try {\n        // 直接传递 magnet.id 给后端\n        await retryMagnetAPI(magnet.id);\n        alert(`任务 ID ${magnet.id} 重试成功！`);\n        this.fetchMagnets(); // 刷新任务列表，获取最新的任务状态\n      } catch (error) {\n        console.error('Error retrying magnet:', error);\n        alert('重试任务时发生错误，请检查控制台日志');\n      } finally {\n        this.retryingMagnetId = null; // 解除任务重试标记\n      }\n    },\n    // 提取标题中的集数，返回数字或 null\n    extractEpisodeNumber(title) {\n      for (const pattern of this.patterns) {\n        const match = title.match(pattern);\n        if (match && match[1]) {\n          return parseInt(match[1], 10);\n        }\n      }\n      // 如果无法提取集数，记录日志\n      console.warn(`无法提取集数的标题: ${title}`);\n      return null;\n    },\n    // 突出显示标题中的集数\n    highlightEpisodeNumber(title) {\n      let highlightedTitle = title;\n      this.patterns.forEach(pattern => {\n        highlightedTitle = highlightedTitle.replace(pattern, match => `<strong class=\"highlight\">${match}</strong>`);\n      });\n      return highlightedTitle;\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* 基础样式 */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #ffffff;\n  /* 纯白色背景 */\n  min-height: 100vh;\n  box-sizing: border-box;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);\n}\n\n/* 头部样式 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #e0f7fa;\n  /* 使用淡蓝色边框替代灰色 */\n}\n\n.header h2 {\n  color: #333;\n  font-size: 1.8em;\n  margin: 0;\n}\n\n.back-button {\n  padding: 10px 22px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.back-button:hover {\n  background-color: #0069d9;\n  transform: translateY(-2px);\n}\n\n.back-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 任务部分 */\n.tasks-section {\n  background-color: #ffffff;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\n\n/* 表格样式 */\n.magnet-table {\n  width: 100%;\n  border-collapse: collapse;\n  margin-bottom: 25px;\n}\n\n.magnet-table th,\n.magnet-table td {\n  padding: 14px 20px;\n  border: 1px solid #e0f7fa;\n  /* 使用淡蓝色边框替代灰色 */\n  text-align: left;\n  font-size: 0.95em;\n  color: #333333;\n}\n\n.magnet-table th {\n  background-color: #e0f7fa;\n  /* 淡蓝色背景 */\n  font-weight: 600;\n}\n\n.magnet-table tbody tr:hover {\n  background-color: #ffffff;\n  /* 淡樱花色悬停效果 */\n}\n\n.magnet-table a {\n  color: #007bff;\n  text-decoration: none;\n  transition: color 0.3s ease;\n}\n\n.magnet-table a:hover {\n  color: #0056b3;\n  text-decoration: underline;\n}\n\n/* 可点击标题中的集数高亮 */\n.highlight {\n  color: #42b983;\n  font-weight: bold;\n}\n\n/* 操作按钮 */\n.primary-button {\n  padding: 8px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.primary-button:hover {\n  background-color: #0069d9;\n  transform: translateY(-2px);\n}\n\n.primary-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.retry-button {\n  background-color: #28a745;\n}\n\n.retry-button:hover {\n  background-color: #218838;\n}\n\n.retry-button:disabled {\n  background-color: #a0a0a0 !important;\n  /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 任务行样式 */\n.incomplete-task-row {\n  background-color: rgba(255, 255, 204, 0.6);\n  /* 浅黄色背景，表示未完成的任务 */\n}\n\n.completed-task-row {\n  background-color: rgba(224, 255, 224, 0.6);\n  /* 浅绿色背景，表示已完成的任务 */\n}\n\n/* 没有任务时的消息 */\n.no-tasks-message {\n  text-align: center;\n  color: #555;\n  font-size: 1em;\n  margin-top: 20px;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .magnet-table th,\n  .magnet-table td {\n    padding: 10px 12px;\n    font-size: 0.85em;\n  }\n\n  .primary-button {\n    padding: 8px 16px;\n    font-size: 0.9em;\n  }\n\n  .highlight {\n    display: block;\n  }\n}\n</style>\n","import { render } from \"./MagnetManager.vue?vue&type=template&id=7756c8c2&scoped=true\"\nimport script from \"./MagnetManager.vue?vue&type=script&lang=js\"\nexport * from \"./MagnetManager.vue?vue&type=script&lang=js\"\n\nimport \"./MagnetManager.vue?vue&type=style&index=0&id=7756c8c2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7756c8c2\"]])\n\nexport default __exports__","<template>\n  <div class=\"container\">\n    <header class=\"header\">\n      <h2>系统日志查看器</h2>\n      <button @click=\"$router.push({ name: 'RSSFeeds' })\" class=\"primary-button back-button\">\n        <i class=\"fas fa-arrow-left\"></i> 返回 RSS 管理\n      </button>\n    </header>\n\n    <section class=\"log-viewer-section\">\n      <div class=\"filter-container\">\n        <div class=\"filter-item\">\n          <label for=\"log-level\">日志级别：</label>\n          <select id=\"log-level\" v-model=\"selectedLevel\" class=\"select-input\">\n            <option value=\"ALL\">所有</option>\n            <option value=\"DEBUG\">DEBUG</option>\n            <option value=\"INFO\">INFO</option>\n            <option value=\"WARNING\">WARNING</option>\n            <option value=\"ERROR\">ERROR</option>\n            <option value=\"CRITICAL\">CRITICAL</option>\n          </select>\n        </div>\n\n        <div class=\"filter-item\">\n          <label for=\"start-date\">开始日期：</label>\n          <input type=\"date\" id=\"start-date\" v-model=\"startDate\" class=\"date-input\" />\n        </div>\n\n        <div class=\"filter-item\">\n          <label for=\"end-date\">结束日期：</label>\n          <input type=\"date\" id=\"end-date\" v-model=\"endDate\" class=\"date-input\" />\n        </div>\n\n        <div class=\"filter-item checkbox-filter\">\n          <label for=\"include-details\">显示详细信息：</label>\n          <input type=\"checkbox\" id=\"include-details\" v-model=\"includeDetails\" class=\"checkbox-input\" />\n        </div>\n\n        <div class=\"filter-item filter-button\">\n          <button class=\"primary-button\" @click=\"fetchLogs(1)\">筛选日志</button>\n        </div>\n      </div>\n\n      <div v-if=\"isLoading\" class=\"loading-spinner\">\n        <i class=\"fas fa-spinner fa-spin\"></i> 正在加载日志...\n      </div>\n\n      <div v-if=\"!isLoading && logs.length === 0\" class=\"no-logs-message\">没有找到符合条件的日志</div>\n      <div v-else class=\"logs-container\">\n        <div\n          v-for=\"(line, index) in logs\"\n          :key=\"index\"\n          :class=\"getLogLineClass(line)\"\n          class=\"log-line\"\n        >\n          <span class=\"log-time\">{{ extractLogTime(line) }}</span>\n          <span class=\"log-level\">{{ extractLogLevel(line) }}</span>\n          <span class=\"log-message\">{{ extractLogMessage(line) }}</span>\n        </div>\n      </div>\n\n      <div v-if=\"totalPages > 1\" class=\"pagination\">\n        <button class=\"secondary-button\" @click=\"changePage(page - 1)\" :disabled=\"page <= 1\">\n          上一页\n        </button>\n        <span class=\"pagination-info\">第 {{ page }} 页，共 {{ totalPages }} 页</span>\n        <button class=\"secondary-button\" @click=\"changePage(page + 1)\" :disabled=\"page >= totalPages\">\n          下一页\n        </button>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { fetchLogs } from '../api/axios'; // 引入封装的日志 API\nimport '@fortawesome/fontawesome-free/css/all.css'; // 引入 Font Awesome 图标库\n\nexport default {\n  data() {\n    return {\n      logs: [],\n      selectedLevel: 'ALL',    // 默认选择所有日志\n      startDate: '',           // 起始日期\n      endDate: '',             // 结束日期\n      includeDetails: false,   // 默认显示详细信息\n      page: 1,                 // 当前页码\n      pageSize: 20,            // 每页大小\n      totalPages: 1,           // 总页数\n      isLoading: false,        // 加载状态\n    };\n  },\n  methods: {\n    fetchLogs(page) {\n      this.page = page; // 设置当前页\n      this.isLoading = true; // 开始加载\n      fetchLogs(this.selectedLevel, this.startDate, this.endDate, this.includeDetails, this.page, this.pageSize)\n        .then(response => {\n          if (response.data.logs && response.data.logs.length > 0) {\n            this.logs = response.data.logs;\n            this.totalPages = response.data.total_pages;\n          } else {\n            this.logs = [];\n            this.totalPages = 1;\n          }\n        })\n        .catch(error => {\n          console.error('无法获取日志:', error);\n          alert('获取日志时发生错误，请检查控制台日志。');\n        })\n        .finally(() => {\n          this.isLoading = false; // 结束加载\n        });\n    },\n    changePage(newPage) {\n      if (newPage > 0 && newPage <= this.totalPages) {\n        this.fetchLogs(newPage);\n      }\n    },\n    getLogLineClass(line) {\n      if (line.includes('| DEBUG |')) {\n        return 'log-line-debug';\n      } else if (line.includes('| INFO |')) {\n        return 'log-line-info';\n      } else if (line.includes('| WARNING |')) {\n        return 'log-line-warning';\n      } else if (line.includes('| ERROR |')) {\n        return 'log-line-error';\n      } else if (line.includes('| CRITICAL |')) {\n        return 'log-line-critical';\n      } else {\n        return 'log-line';\n      }\n    },\n    extractLogTime(line) {\n      return line.split(' | ')[0];\n    },\n    extractLogLevel(line) {\n      return line.split(' | ')[1];\n    },\n    extractLogMessage(line) {\n      return line.split(' | ').slice(2).join(' | ');\n    }\n  },\n  mounted() {\n    this.fetchLogs(this.page); // 组件挂载时获取第一页日志\n  }\n};\n</script>\n\n<style scoped>\n/* 基础样式 */\n.container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 30px 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  background-color: #ffffff; /* 纯白色背景 */\n  min-height: 100vh;\n  box-sizing: border-box;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);\n}\n\n/* 头部样式 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 2px solid #e0f7fa; /* 使用淡蓝色边框替代灰色 */\n}\n\n.header h2 {\n  color: #333;\n  font-size: 1.8em;\n  margin: 0;\n}\n\n.back-button {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px 22px;\n  font-size: 0.95em;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.back-button:hover {\n  background-color: #0069d9;\n  transform: translateY(-2px);\n}\n\n.back-button:disabled {\n  background-color: #a0a0a0 !important; /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 日志查看器部分 */\n.log-viewer-section {\n  background-color: #ffffff;\n  padding: 30px;\n  border-radius: 10px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n}\n\n/* 筛选条件的容器 */\n.filter-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: flex-start;\n  margin-bottom: 25px;\n  align-items: center; /* 确保所有筛选项垂直居中对齐 */\n}\n\n/* 筛选项的样式 */\n.filter-item {\n  flex: 1 1 200px;\n  min-width: 150px;\n  display: flex;\n  flex-direction: column;\n  font-size: 0.95em;\n  color: #555;\n}\n\n.filter-item label {\n  margin-bottom: 8px;\n  font-weight: 500;\n}\n\n/* 覆盖checkbox-filter的布局并添加偏移和下移 */\n.filter-item.checkbox-filter {\n  flex-direction: row;\n  align-items: center;\n  white-space: nowrap; /* 防止内容换行 */\n  margin-left: 20px;   /* 向右偏移 */\n  margin-top: 10px;    /* 向下移动 */\n}\n\n/* 增加标签和勾选框之间的间距 */\n.filter-item.checkbox-filter label {\n  margin-bottom: 0;\n  margin-right: 10px; /* 增加标签和勾选框之间的间距 */\n  white-space: nowrap; /* 防止标签文本换行 */\n}\n\n/* 确保checkbox-input的宽度适应内容 */\n.checkbox-input {\n  width: auto;\n  flex-shrink: 0; /* 防止勾选框被压缩 */\n}\n\n/* 筛选按钮样式 */\n.filter-button {\n  display: flex;\n  align-items: flex-end;\n}\n\n/* 按钮样式 */\n.primary-button {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px 22px;\n  font-size: 0.95em;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.primary-button:hover {\n  background-color: #0069d9;\n  transform: translateY(-2px);\n}\n\n.primary-button:disabled {\n  background-color: #a0a0a0 !important; /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n.secondary-button {\n  background-color: #6c757d;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  font-size: 0.95em;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease, transform 0.2s ease;\n  font-weight: 600;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.secondary-button:hover {\n  background-color: #5a6268;\n  transform: translateY(-2px);\n}\n\n.secondary-button:disabled {\n  background-color: #a0a0a0 !important; /* 使用较浅的灰色表示禁用状态 */\n  cursor: not-allowed;\n  opacity: 0.7;\n}\n\n/* 日志行的样式 */\n.logs-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.log-line {\n  font-family: monospace;\n  white-space: pre-wrap;  /* 自动换行 */\n  word-wrap: break-word;  /* 强制长词换行 */\n  text-align: left;\n  margin: 5px 0;\n  padding: 10px;\n  border-radius: 5px;\n  max-width: 100%;  /* 防止内容超出背景区域 */\n  font-size: 1.1em;  /* 增大日志文本的字体大小 */\n}\n\n.log-line-debug {\n  background-color: #e7f3fe;\n  border-left: 4px solid #007bff;\n}\n\n.log-line-info {\n  background-color: #e9f7ef;\n  border-left: 4px solid #28a745;\n}\n\n.log-line-warning {\n  background-color: #fff3cd;\n  border-left: 4px solid #ffc107;\n}\n\n.log-line-error {\n  background-color: #f8d7da;\n  border-left: 4px solid #dc3545;\n}\n\n.log-line-critical {\n  background-color: #f5c6cb;\n  border-left: 4px solid #bd2130;\n}\n\n/* 区分日志的各个部分 */\n.log-time {\n  color: #6c757d; /* 灰色，突出时间部分 */\n  margin-right: 10px;\n}\n\n.log-level {\n  font-weight: bold;\n  margin-right: 10px;\n}\n\n.log-message {\n  color: #333; /* 默认深色用于消息内容 */\n}\n\n.no-logs-message {\n  text-align: center;\n  font-size: 1em;\n  color: #6c757d;\n  margin-top: 20px;\n}\n\n/* 加载状态样式 */\n.loading-spinner {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 1.2em;\n  color: #007bff;\n  margin-top: 20px;\n}\n\n/* 分页组件的样式 */\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 25px;\n  margin-top: 20px;\n  flex-wrap: wrap;\n}\n\n.pagination-info {\n  font-size: 0.95em;\n  color: #555;\n}\n\n/* 响应式设计 */\n@media (max-width: 768px) {\n  .header {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n\n  .filter-container {\n    flex-direction: column; /* 改为垂直排列以适应小屏幕 */\n    align-items: flex-start;\n    gap: 15px;\n  }\n\n  .filter-item {\n    flex: 1 1 100%;\n    min-width: 100%;\n  }\n\n  /* 保持checkbox-filter为行内布局，并调整偏移和下移 */\n  .filter-item.checkbox-filter {\n    flex-direction: row;\n    align-items: center;\n    margin-left: 0;      /* 小屏幕上取消向右偏移 */\n    margin-top: 10px;    /* 保持向下移动 */\n    width: auto;\n  }\n\n  .filter-item.checkbox-filter label,\n  .filter-item.checkbox-filter .checkbox-input {\n    width: auto;\n    white-space: nowrap; /* 防止标签文本换行 */\n  }\n\n  .log-line {\n    font-size: 1em; /* 适当增大 */\n  }\n\n  .primary-button,\n  .secondary-button {\n    width: 100%;\n    max-width: 300px;\n  }\n\n  .log-time,\n  .log-level,\n  .log-message {\n    display: block;\n    margin-bottom: 5px;\n  }\n}\n</style>\n","import { render } from \"./LogViewer.vue?vue&type=template&id=9578952e&scoped=true\"\nimport script from \"./LogViewer.vue?vue&type=script&lang=js\"\nexport * from \"./LogViewer.vue?vue&type=script&lang=js\"\n\nimport \"./LogViewer.vue?vue&type=style&index=0&id=9578952e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9578952e\"]])\n\nexport default __exports__","<template>\n    <div class=\"not-found\">\n      <h1>404 - 页面未找到</h1>\n      <p>抱歉，您访问的页面不存在。</p>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    name: 'NotFound'\n  };\n  </script>\n  \n  <style scoped>\n  .not-found {\n    text-align: center;\n    margin-top: 50px;\n  }\n  .not-found h1 {\n    font-size: 48px;\n    color: #ff6b6b;\n  }\n  .not-found p {\n    font-size: 18px;\n    color: #555;\n  }\n  </style>\n  ","import { render } from \"./NotFound.vue?vue&type=template&id=3a6d8836&scoped=true\"\nimport script from \"./NotFound.vue?vue&type=script&lang=js\"\nexport * from \"./NotFound.vue?vue&type=script&lang=js\"\n\nimport \"./NotFound.vue?vue&type=style&index=0&id=3a6d8836&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3a6d8836\"]])\n\nexport default __exports__","<template>\n    <div class=\"container\">\n      <header class=\"header\">\n        <h2>登录记录</h2>\n        <button class=\"primary-button return-button\" @click=\"$router.push({ name: 'RSSFeeds' })\">\n          返回 RSS 管理\n        </button>\n      </header>\n  \n      <section class=\"logs-section\">\n        <!-- 登录记录表格显示 -->\n        <table class=\"login-log-table\">\n          <thead>\n            <tr>\n              <th>时间</th>\n              <th>IP 地址</th>\n              <th>用户名</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(log, index) in logs\" :key=\"log.id\" :class=\"getRowClass(index)\">\n              <td>{{ log.time }}</td>\n              <td>{{ log.ip_address }}</td>\n              <td>{{ log.username }}</td>\n            </tr>\n          </tbody>\n        </table>\n  \n        <!-- 没有记录时的显示 -->\n        <p v-if=\"logs.length === 0\" class=\"no-logs-message\">没有找到相关的登录记录。</p>\n      </section>\n    </div>\n  </template>\n  \n  <script>\n  import { getLoginLogs } from '../api/axios';\n  \n  export default {\n    data() {\n      return {\n        logs: [] // 登录记录数据\n      };\n    },\n    methods: {\n      fetchLoginLogs() {\n        getLoginLogs()\n          .then(response => {\n            this.logs = response.data.logs;\n          })\n          .catch(error => {\n            console.error('无法获取登录记录:', error);\n            alert('无法获取登录记录，请检查控制台日志。');\n          });\n      },\n      getRowClass(index) {\n        return index % 2 === 0 ? 'even-log-row' : 'odd-log-row';\n      }\n    },\n    mounted() {\n      this.fetchLoginLogs(); // 加载页面时获取数据\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* 基础样式 */\n  .container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 30px 20px;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n    background-color: #ffffff; /* 纯白色背景 */\n    min-height: 100vh;\n    box-sizing: border-box;\n    border-radius: 10px;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.04);\n  }\n  \n  /* 头部样式 */\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-wrap: wrap;\n    margin-bottom: 30px;\n    padding-bottom: 15px;\n    border-bottom: 2px solid #e0f7fa; /* 使用淡蓝色边框替代灰色 */\n  }\n  \n  .header h2 {\n    color: #333;\n    font-size: 1.8em;\n    margin: 0;\n  }\n  \n  .return-button {\n    padding: 10px 22px;\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s ease, transform 0.2s ease;\n    font-weight: 600;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .return-button:hover {\n    background-color: #0069d9;\n    transform: translateY(-2px);\n  }\n  \n  .return-button:disabled {\n    background-color: #a0a0a0 !important; /* 使用较浅的灰色表示禁用状态 */\n    cursor: not-allowed;\n    opacity: 0.7;\n  }\n  \n  /* 登录记录部分 */\n  .logs-section {\n    background-color: #ffffff;\n    padding: 30px;\n    border-radius: 10px;\n    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  }\n  \n  /* 表格样式 */\n  .login-log-table {\n    width: 100%;\n    border-collapse: collapse;\n    margin-bottom: 25px;\n  }\n  \n  .login-log-table th,\n  .login-log-table td {\n    padding: 14px 20px;\n    border: 1px solid #e0f7fa; /* 使用淡蓝色边框替代灰色 */\n    text-align: center;\n    font-size: 0.95em;\n    color: #333333;\n  }\n  \n  .login-log-table th {\n    background-color: #e0f7fa; /* 淡蓝色背景 */\n    font-weight: 600;\n  }\n  \n  .login-log-table tbody tr:hover {\n    background-color: #c5c5c56d; /* 淡樱花色悬停效果 */\n  }\n  \n  .login-log-table a {\n    color: #007bff;\n    text-decoration: none;\n    transition: color 0.3s ease;\n  }\n  \n  .login-log-table a:hover {\n    color: #0056b3;\n    text-decoration: underline;\n  }\n  \n  /* 任务行样式 */\n  .even-log-row {\n    background-color: #ffffff; /* 奇数行白色背景 */\n  }\n  \n  .odd-log-row {\n    background-color: #f1f1f1; /* 偶数行淡灰色背景 */\n  }\n  \n  /* 没有记录时的消息 */\n  .no-logs-message {\n    text-align: center;\n    color: #555;\n    font-size: 1em;\n    margin-top: 20px;\n  }\n  \n  /* 响应式设计 */\n  @media (max-width: 768px) {\n    .header {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  \n    .login-log-table th,\n    .login-log-table td {\n      padding: 10px 12px;\n      font-size: 0.85em;\n    }\n  \n    .return-button {\n      padding: 8px 16px;\n      font-size: 0.9em;\n    }\n  }\n  </style>\n  ","import { render } from \"./LoginLogs.vue?vue&type=template&id=03a9ea26&scoped=true\"\nimport script from \"./LoginLogs.vue?vue&type=script&lang=js\"\nexport * from \"./LoginLogs.vue?vue&type=script&lang=js\"\n\nimport \"./LoginLogs.vue?vue&type=style&index=0&id=03a9ea26&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-03a9ea26\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport LoginPage from './components/LoginPage.vue';\nimport RSSFeeds from './components/RSSFeeds.vue';\nimport MagnetManager from './components/MagnetManager.vue';\nimport LogViewer from './components/LogViewer.vue';\nimport NotFound from './components/NotFound.vue'; // 引入 404 页面组件\nimport LoginLogs from './components/LoginLogs.vue'; // 登录记录页面组件\n\nconst routes = [\n  {\n    path: '/',\n    name: 'RSSFeeds',\n    component: RSSFeeds,\n    meta: { requiresAuth: true } // 需要登录才能访问\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginPage\n  },\n  {\n    path: '/magnets/:rssFeedId',\n    name: 'MagnetManager',\n    component: MagnetManager,\n    meta: { requiresAuth: true },\n    props: true // 允许通过路由传递参数给组件\n  },\n  {\n    path: '/logs',\n    name: 'LogViewer',\n    component: LogViewer,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/login-logs',\n    name: 'LoginLogs',\n    component: LoginLogs,\n    meta: { requiresAuth: true } // 确保只有登录后可以访问\n  },\n  {\n    path: '/:pathMatch(.*)*', // 匹配所有未定义的路径\n    name: 'NotFound',\n    component: NotFound\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    if (token) {\n      next(); // 有 Token 继续访问\n    } else {\n      next({ name: 'Login' }); // 没有 Token 跳转到登录页面\n    }\n  } else {\n    next(); // 不需要认证的页面可以访问\n  }\n});\n\nexport default router;\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router'; // 引入 router\n\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2048); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","key","_createElementBlock","_hoisted_1","$options","isLoginOrNotFound","_createCommentVNode","_hoisted_2","_cache","_createElementVNode","_createVNode","_component_router_view","name","computed","this","$route","__exports__","render","class","$event","$data","username","type","placeholder","password","onClick","args","login","loginError","_hoisted_3","_toDisplayString","apiClient","axios","create","baseURL","headers","withCredentials","fetchFeeds","get","createFeed","feedData","post","deleteFeed","rssId","delete","patchRssFeed","updateData","patch","renameRssFeed","refreshSingleFeed","refreshAllFeeds","rssIdList","requests","map","Promise","all","fetchRSSFeedById","fetchMagnetsByRss","retryMagnet","magnetId","startTaskQueue","fetchLogs","level","startDate","endDate","includeDetails","page","pageSize","params","start_date","end_date","include_details","page_size","loginUser","async","response","token","data","localStorage","setItem","error","console","message","interceptors","request","use","config","getItem","Authorization","reject","status","refreshResponse","newToken","removeItem","window","location","href","getLoginLogs","methods","$router","push","_hoisted_4","logout","_hoisted_5","_ctx","viewLogs","refreshAllRssFeeds","disabled","refreshingAll","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","filterDate","onChange","applyFilters","_hoisted_10","filterShouldUpdate","value","_hoisted_11","searchName","onInput","_hoisted_12","_Fragment","_renderList","paginatedFeeds","feed","viewMagnets","_hoisted_13","url","target","_hoisted_14","last_updated","should_update","updateShouldUpdate","_hoisted_15","isEditing","_hoisted_20","newName","_hoisted_21","newUrl","_hoisted_22","_hoisted_23","saveFeedChanges","_hoisted_24","cancelEdit","_hoisted_25","_hoisted_16","editFeed","_hoisted_17","confirmDeleteFeed","_hoisted_18","refreshSingleRssFeed","refreshingFeedId","_hoisted_19","_hoisted_26","prevPage","currentPage","_hoisted_27","_hoisted_28","totalPages","nextPage","_hoisted_29","_hoisted_30","_createTextVNode","pageInput","min","max","_hoisted_31","number","jumpToPage","_hoisted_32","_hoisted_33","newFeed","addFeed","addingFeed","_hoisted_34","feeds","deletingFeedId","logs","startIndex","filteredFeeds","slice","Math","ceil","length","filter","matchesDate","matchesShouldUpdate","matchesSearchName","isSameDay","toString","toLowerCase","includes","created","setDefaultFilters","getUsername","startTasks","alert","rssFeedId","payload","JSON","parse","atob","split","today","Date","year","getFullYear","month","getMonth","padStart","day","getDate","dateString","date","formattedDate","formatDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","confirm","selectedFeeds","old_name","new_name","rssFeed","totalEpisodes","sortedMagnets","magnet","index","_normalizeClass","innerHTML","highlightEpisodeNumber","title","magnet_link","retryingMagnetId","props","String","required","magnets","patterns","sort","a","b","aEpisode","extractEpisodeNumber","bEpisode","fetchRssFeedDetails","fetchMagnets","retryMagnetAPI","pattern","match","parseInt","warn","highlightedTitle","forEach","replace","for","selectedLevel","_createStaticVNode","isLoading","line","getLogLineClass","extractLogTime","extractLogLevel","extractLogMessage","changePage","then","total_pages","catch","finally","newPage","join","mounted","log","getRowClass","time","ip_address","fetchLoginLogs","routes","path","component","RSSFeeds","meta","requiresAuth","LoginPage","MagnetManager","LogViewer","LoginLogs","NotFound","router","createRouter","history","createWebHistory","beforeEach","to","from","next","matched","some","record","app","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}